/*
2진법, 자료형 총 정리

A.2진법

	10진법
	12345 = 10000 + 2000 + 300 + 40 + 5
		  = 1*10^4 + 2*10^3 + 3*10^2 + 4*10^1 + 5*10^0

	2진법 - 0, 1로만 구성
	100110 = 1*2^5 + 1*2^2 + 1*2^1 = 38

	bit는 0이나 1로 표현할 수 있는 자릿수의 갯수를 의미
	ex1) int - 32bit = 4byte
	00000000 00000000 00000000 00000000

	ex2) 5 = 101(2)
	00000000 00000000 00000000 00000101

	ex3) 37= 100101(2)
	00000000 00000000 00000000 00100101

B. 자료형 - 정수형, 실수형

	8bit = 1byte
	바이트 : 컴퓨터에서 데이터를 처리하는 가장 작은 단위

	정수형
	1. char(1byte) - 문자를 담는데 쓰임
	2. short(2byte) 
	3. long(4byte) -2147482648 ~ +2147483647 (-2^31~2^31-1사이의 수. 자리수가 32개니깐.)
	4. long long(8byte)
	5. int(시스템에 따라서 자동 결정, 대체로 long)

	실수형
	1. float(4byte)
	2. double(8byte)

C. unsigned, signed

	00000000 00000000 00000000 00000000
	에서 맨 첫번째 0은 조금 특별하게, 부호를 저장하는데 쓰임.
	양수면 0, 음수면 1.
	예를들어, -1을 저장하면
	11111111 11111111 11111111 11111111
	여기서 1만 더하면 
	00000000 00000000 00000000 00000000
	으로 되서 0이됨.

	unsigned는 맨 앞의 부호를 무시하면서 선언할 때 쓰임
	예를들어, unsigned int a;

	원래 부호를 선언하면 마이너스 범위까지 포함하여
	long(4byte) -2147482648 ~ +2147483647 (-2^31~2^31-1)
	를 커버하는데, 이젠 마이너스의 범위를 신경안쓰고 플러스 범위에 포함시켜서
	0~ +4294967295(2^32-1) 까지 저장 가능


D, void & bool
	
	1. void : 리턴값이 없는 함수의 자료형

	2. bool : 참, 거짓을 저장하는 자료형
			  1bit잡아도 될것같지만 8bit 잡음. 
			  왜? 컴퓨터에서 데이터를 처리하는 가장 작은 단위가 1바이트인데, 1바이트가 8비트라서.
			  따라서 1char과 잡아먹는 용량이 같음.
*/
#include <stdio.h>

int main()
{

}